package notice;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

public class UserDAO {
	private String userID; 
	private String userPassword; 
	private String userName; 
	private String userTel; 
	private String userBirth;
	private String userLocation;
	private String userEmail;
	private Connection con; 
	private ResultSet rs; 
	public UserDAO() { 
		try { 
			String dbURL = "jdbc:mysql://localhost:3306/BBS?characterEncoding=UTF-8&serverTimezone=UTC"; 
			String dbID = "root"; 
			String dbPassword = "dl10743"; 
			Class.forName("com.mysql.jdbc.Driver"); 
			con = DriverManager.getConnection(dbURL, dbID, dbPassword); 
		} catch (Exception e) { 
			e.printStackTrace(); 
			} 
		} 
	// 로그인 
	/* 
	 * * -2: 아이디없음
	 *  * -1: 서버오류 
	 *  * 0: 비밀번호 틀림 * 
	 *  1: 성공 */ 
	
	public int login(String userID, String userPassword) {
		try { 
			PreparedStatement pst = con.prepareStatement("SELECT userPassword FROM user WHERE userID = ?"); 
			pst.setString(1, userID); 
			rs = pst.executeQuery(); 
			if (rs.next()) { 
				return rs.getString(1).equals(userPassword) ? 1 : 0;
			} else { 
				return -2; 
				} 
			} catch (Exception e) { 
				e.printStackTrace(); return -1; 
				} 
		} 
	
	// 중복여부 확인 
	public boolean ID_Check(String userID) { 
		try { 
			PreparedStatement pst = con.prepareStatement("SELECT * FROM user WHERE userID = ?"); 
			pst.setString(1, userID); 
			rs = pst.executeQuery(); 
			if (rs.next()) { 
				return false; 
			} else { 
				return true; 
				} 
			} catch (Exception e) { 
				e.printStackTrace(); 
				} 
			return false; 
		} 
	
	// 회원가입
	/* 
	 * * -1: 서버오류 
	 * * 0: 이미 존재하는 아이디
	 *  * 1: 성공 
	 *  */ 
	
	public int join(UserDAO userDAO) { 
		if(!ID_Check(userDAO.getUserID())) return 0; 
		try { 
			PreparedStatement pst = con.prepareStatement("INSERT INTO user VALUES (?,?,?,?,?)"); 
			pst.setString(1, userDAO.getUserID()); 
			pst.setString(2, userDAO.getUserPassword()); 
			pst.setString(3, userDAO.getUserName()); 
			pst.setString(4, userDAO.getUserTel()); 
			pst.setString(5, userDAO.getUserBirth()); 
			pst.setString(6, userDAO.getUserLocation()); 
			pst.setString(7, userDAO.getUserEmail()); 
			return pst.executeUpdate(); 
		} catch (Exception e) { 
			e.printStackTrace(); 
			return -1; 
			} 
		}
	
	// 유저 데이터 가져오기 
	public UserDAO getUser(String userID) { 
		try { 
			PreparedStatement pst = con.prepareStatement("SELECT * FROM user WHERE userID = ?"); 
			pst.setString(1, userID); 
			rs = pst.executeQuery(); 
			if (rs.next()) { 
				UserDAO userDAO = new UserDAO(); 
				userDAO.setUserID(rs.getString(1)); 
				userDAO.setUserPassword(rs.getString(2)); 
				userDAO.setUserName(rs.getString(3)); 
				userDAO.setUserTel(rs.getString(4)); 
				userDAO.setUserBirth(rs.getString(5)); 
				userDAO.setUserLocation(rs.getString(5)); 
				userDAO.setUserEmail(rs.getString(5)); 
				return userDAO; 
				} 
			} catch (Exception e) {
				e.printStackTrace(); 
				} return null; 
	} 
	public String getUserID() {
		return userID;
	}
	public void setUserID(String userID) {
		this.userID = userID;
	}
	public String getUserPassword() {
		return userPassword;
	}
	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}
	public String getUserName() {
		return userName;
	}
	public void setUserName(String userName) {
		this.userName = userName;
	}
	public String getUserTel() {
		return userTel;
	}
	public void setUserTel(String userTel) {
		this.userTel = userTel;
	}
	public String getUserBirth() {
		return userBirth;
	}
	public void setUserBirth(String userBirth) {
		this.userBirth = userBirth;
	}
	public String getUserLocation() {
		return userLocation;
	}
	public void setUserLocation(String userLocation) {
		this.userLocation = userLocation;
	}
	public String getUserEmail() {
		return userEmail;
	}
	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}
	
	
}
